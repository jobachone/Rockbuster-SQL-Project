Exported from Lucid for PostgreSQL

CREATE TABLE "country" (
  "country_id" integer,
  "country" character varying(50),
  "last_update" timestamp without time zone,
  PRIMARY KEY ("country_id")
);

CREATE TABLE "city" (
  "city_id" integer,
  "city" character varying(50),
  "country_id" smallint,
  "last_update" timestamp without time zone,
  PRIMARY KEY ("city_id"),
  CONSTRAINT "FK_city.country_id"
    FOREIGN KEY ("country_id")
      REFERENCES "country"("country_id")
);

CREATE TABLE "address" (
  "address_id" integer,
  "address" character varying(50),
  "address2" character varying(50),
  "district" character varying(20),
  "city_id" smallint,
  "postal_code" character varying(10),
  "phone" character varying(20),
  "last_update" timestamp without time zone,
  PRIMARY KEY ("address_id"),
  CONSTRAINT "FK_address.city_id"
    FOREIGN KEY ("city_id")
      REFERENCES "city"("city_id")
);

CREATE TABLE "customer" (
  "customer_id" integer,
  "store_id" smallint,
  "first_name" character varying(45),
  "last_name" character varying(45),
  "email" character varying(50),
  "address_id" smallint,
  "activebool" boolean,
  "create_date" date,
  "last_update" timestamp without time zone,
  "active" integer,
  PRIMARY KEY ("customer_id"),
  CONSTRAINT "FK_customer.address_id"
    FOREIGN KEY ("address_id")
      REFERENCES "address"("address_id")
);

CREATE TABLE "staff" (
  "staff_id" integer,
  "first_name" character varying(45),
  "last_name" character varying(45),
  "address_id" smallint,
  "email" character varying(50),
  "store_id" smallint,
  "active" boolean,
  "username" character varying(16),
  "password" character varying(40),
  "last_update" timestamp without time zone,
  "picture" bytea,
  PRIMARY KEY ("staff_id"),
  CONSTRAINT "FK_staff.address_id"
    FOREIGN KEY ("address_id")
      REFERENCES "address"("address_id")
);

CREATE TABLE "store" (
  "store_id" integer,
  "manager_staff_id" smallint,
  "address_id" smallint,
  "last_update" timestamp without time zone,
  PRIMARY KEY ("store_id"),
  CONSTRAINT "FK_store.manager_staff_id"
    FOREIGN KEY ("manager_staff_id")
      REFERENCES "staff"("staff_id"),
  CONSTRAINT "FK_store.address_id"
    FOREIGN KEY ("address_id")
      REFERENCES "address"("address_id")
);

CREATE TABLE "language" (
  "language_id" integer,
  "name" character(20),
  "last_update" timestamp without time zone,
  PRIMARY KEY ("language_id")
);

CREATE TABLE "film" (
  "film_id" integer,
  "title" character varying(255),
  "description" text,
  "release_year" integer,
  "language_id" smallint,
  "rental_duration" smallint,
  "rental_rate" numeric,
  "length" smallint,
  "replacement_cost" numeric,
  "rating" USER-DEFINED,
  "last_update" timestamp without time zone,
  "special_features" ARRAY,
  "fulltext" tsvector,
  PRIMARY KEY ("film_id"),
  CONSTRAINT "FK_film.language_id"
    FOREIGN KEY ("language_id")
      REFERENCES "language"("language_id")
);

CREATE TABLE "actor" (
  "actor_id" integer,
  "first_name" character varying(45),
  "last_name" character varying(45),
  "last_update" timestamp without time zone,
  PRIMARY KEY ("actor_id")
);

CREATE TABLE "film_actor" (
  "actor_id" smallint,
  "film_id" smallint,
  "last_update" timestamp without time zone,
  PRIMARY KEY ("actor_id", "film_id"),
  CONSTRAINT "FK_film_actor.film_id"
    FOREIGN KEY ("film_id")
      REFERENCES "film"("film_id"),
  CONSTRAINT "FK_film_actor.actor_id"
    FOREIGN KEY ("actor_id")
      REFERENCES "actor"("actor_id")
);

CREATE TABLE "category" (
  "category_id" integer,
  "name" character varying(25),
  "last_update" timestamp without time zone,
  PRIMARY KEY ("category_id")
);

CREATE TABLE "film_category" (
  "film_id" smallint,
  "category_id" smallint,
  "last_update" timestamp without time zone,
  PRIMARY KEY ("film_id", "category_id"),
  CONSTRAINT "FK_film_category.film_id"
    FOREIGN KEY ("film_id")
      REFERENCES "film"("film_id"),
  CONSTRAINT "FK_film_category.category_id"
    FOREIGN KEY ("category_id")
      REFERENCES "category"("category_id")
);

CREATE TABLE "inventory" (
  "inventory_id" integer,
  "film_id" smallint,
  "store_id" smallint,
  "last_update" timestamp without time zone,
  PRIMARY KEY ("inventory_id"),
  CONSTRAINT "FK_inventory.film_id"
    FOREIGN KEY ("film_id")
      REFERENCES "film"("film_id")
);

CREATE TABLE "rental" (
  "rental_id" integer,
  "rental_date" timestamp without time zone,
  "inventory_id" integer,
  "customer_id" smallint,
  "return_date" timestamp without time zone,
  "staff_id" smallint,
  "last_update" timestamp without time zone,
  PRIMARY KEY ("rental_id"),
  CONSTRAINT "FK_rental.customer_id"
    FOREIGN KEY ("customer_id")
      REFERENCES "customer"("customer_id"),
  CONSTRAINT "FK_rental.inventory_id"
    FOREIGN KEY ("inventory_id")
      REFERENCES "inventory"("inventory_id"),
  CONSTRAINT "FK_rental.staff_id"
    FOREIGN KEY ("staff_id")
      REFERENCES "staff"("staff_id")
);

CREATE TABLE "payment" (
  "payment_id" integer,
  "customer_id" smallint,
  "staff_id" smallint,
  "rental_id" integer,
  "amount" numeric,
  "payment_date" timestamp without time zone,
  PRIMARY KEY ("payment_id"),
  CONSTRAINT "FK_payment.customer_id"
    FOREIGN KEY ("customer_id")
      REFERENCES "customer"("customer_id"),
  CONSTRAINT "FK_payment.rental_id"
    FOREIGN KEY ("rental_id")
      REFERENCES "rental"("rental_id"),
  CONSTRAINT "FK_payment.staff_id"
    FOREIGN KEY ("staff_id")
      REFERENCES "staff"("staff_id")
);

